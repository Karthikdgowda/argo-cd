pipeline {
  agent any
   tools {
    maven 'maven'
   }
  stages {
   stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Karthikdgowda/argo-cd.git'
      }
    }
   stage('Build and Test') {
      steps {
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
   stage('sonarcodescan'){
            steps {
            withSonarQubeEnv('sonar') {
              sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar'
              }
            } 
         }
   stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "cloudzenix/argo-cd:${BUILD_NUMBER}"
        DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker_cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker_cred") {
                dockerImage.push()
            }
        }
      }
    }
   stage('Update Deployment File') {
     environment {
            GIT_REPO_NAME = "argo-cd"
            GIT_USER_NAME = "Karthikdgowda"
        }
        steps {
          withCredentials([gitUsernamePassword(credentialsId: 'git_token', gitToolName: 'git', variable: 'GIT_TOKEN')]) {
                sh '''
                    git config user.email "karthikd.gowda@cloudzenix.com"
                    git config user.name "Karthik CD"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GIT_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                '''
      }
    }
  }
 }
}